--- a/dlls/shell32/Makefile.in
+++ b/dlls/shell32/Makefile.in
@@ -2,6 +2,7 @@
 MODULE    = shell32.dll
 IMPORTLIB = shell32
 IMPORTS   = uuid shlwapi user32 gdi32 advapi32
+CFLAGS   += -Wno-array-bounds
 DELAYIMPORTS = ole32 oleaut32 shdocvw version comctl32 gdiplus
 # AUTHORS file is in the top-level directory
 EXTRAINCL = -I$(top_srcdir)

--- a/dlls/winevulkan/make_vulkan
+++ b/dlls/winevulkan/make_vulkan
@@ -2043,6 +2043,8 @@ class VkStruct(Sequence):
         """
 
         for m in self.members:
+            if self.name == m.type:
+                continue
             if m.needs_alignment():
                 return True
         return False
@@ -2057,6 +2059,8 @@ class VkStruct(Sequence):
             return True
 
         for m in self.members:
+            if self.name == m.type:
+                continue
             if m.needs_conversion():
                 return True
         return False
@@ -2073,11 +2079,11 @@ class VkStruct(Sequence):
         """ Check if any struct member needs some memory freeing."""
 
         for m in self.members:
+            if self.name == m.type:
+                continue
             if m.needs_free():
                 return True
 
-            continue
-
         return False
 
     def needs_struct_extensions_conversion(self):
@@ -3350,7 +3356,7 @@ class VkRegistry(object):
                 if "data" in type_info:
                     types[m.type]["data"].required = True
 
-                if type_info["category"] == "struct":
+                if type_info["category"] == "struct" and struct.name != m.type:
                     # Yay, recurse
                     mark_struct_dependencies(type_info["data"], types)
                 elif type_info["category"] == "funcpointer":
-- 
